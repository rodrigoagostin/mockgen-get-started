// Code generated by MockGen. DO NOT EDIT.
// Source: repository/person_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "mockgen-example/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPersonRepository is a mock of PersonRepository interface.
type MockPersonRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPersonRepositoryMockRecorder
}

// MockPersonRepositoryMockRecorder is the mock recorder for MockPersonRepository.
type MockPersonRepositoryMockRecorder struct {
	mock *MockPersonRepository
}

// NewMockPersonRepository creates a new mock instance.
func NewMockPersonRepository(ctrl *gomock.Controller) *MockPersonRepository {
	mock := &MockPersonRepository{ctrl: ctrl}
	mock.recorder = &MockPersonRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonRepository) EXPECT() *MockPersonRepositoryMockRecorder {
	return m.recorder
}

// CreatePerson mocks base method.
func (m *MockPersonRepository) CreatePerson(person model.Person) model.Person {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePerson", person)
	ret0, _ := ret[0].(model.Person)
	return ret0
}

// CreatePerson indicates an expected call of CreatePerson.
func (mr *MockPersonRepositoryMockRecorder) CreatePerson(person interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePerson", reflect.TypeOf((*MockPersonRepository)(nil).CreatePerson), person)
}
